{"version":3,"sources":["jquery.tocify.js"],"names":["tocify","$","window","document","tocClassName","hideTocClassName","headerClassName","headerClass","subheaderClassName","subheaderClass","itemClassName","itemClass","extendPageClassName","jQuery","widget","version","options","context","ignoreSelector","selectors","showAndHide","showEffect","showEffectSpeed","hideEffect","hideEffectSpeed","smoothScroll","smoothScrollSpeed","scrollTo","showAndHideOnScroll","highlightOnScroll","highlightOffset","theme","extendPage","extendPageOffset","history","scrollHistory","hashGenerator","highlightDefault","_create","self","this","extendPageScroll","items","_generateToc","_addCSSClasses","webkit","prop","toLowerCase","indexOf","_setEventHandlers","on","_setActiveElement","promise","done","setTimeout","firstElem","ul","find","replace","substr","length","element","addClass","each","index","is","id","class","append","_nestElements","nextUntil","nodeName","filter","_appendSubheaders","call","pageload","hash","location","substring","elem","focusClass","removeClass","click","first","arr","item","hashValue","grep","text","push","_generateHashValue","data-unique","before","name","hashGeneratorOption","previousHeader","eq","currentTagName","charAt","previousTagName","last","after","data-tag","next","event","attr","_triggerShow","_scrollTo","mouseenter.tocify","hoverClass","css","mouseleave.tocify","lastElem","lastElemOffset","currentElem","winScrollTop","scrollTop","winHeight","height","docHeight","scrollHeight","offset","top","Math","abs","anchorText","closestAnchorDistance","closestAnchorIdx","anchors","idx","distance","show","scroll","parent","children","closest","parents","add","slideDown","fadeIn","hide","not","siblings","slideUp","fadeOut","end","setOption","Widget","prototype","_setOption","apply","arguments","setOptions","_setOptions","duration","currentDiv","animate","isFunction"],"mappings":"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","file":"jquery.tocify.js","sourcesContent":["/* jquery Tocify - v1.9.0 - 2013-10-01\n * http://www.gregfranko.com/jquery.tocify.js/\n * Copyright (c) 2013 Greg Franko; Licensed MIT */\n\n// Immediately-Invoked Function Expression (IIFE) [Ben Alman Blog Post](http://benalman.com/news/2010/11/immediately-invoked-function-expression/) that calls another IIFE that contains all of the plugin logic.  I used this pattern so that anyone viewing this code would not have to scroll to the bottom of the page to view the local parameters that were passed to the main IIFE.\n;(function(tocify) {\n    // ECMAScript 5 Strict Mode: [John Resig Blog Post](http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/)\n    'use strict'\n\n    // Calls the second IIFE and locally passes in the global jQuery, window, and document objects\n    tocify(window.jQuery, window, document)\n})(\n    // Locally passes in `jQuery`, the `window` object, the `document` object, and an `undefined` variable.  The `jQuery`, `window` and `document` objects are passed in locally, to improve performance, since javascript first searches for a variable match within the local variables set before searching the global variables set.  All of the global variables are also passed in locally to be minifier friendly. `undefined` can be passed in locally, because it is not a reserved word in JavaScript.\n    function($, window, document, undefined) {\n        // ECMAScript 5 Strict Mode: [John Resig Blog Post](http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/)\n        'use strict'\n\n        var tocClassName = 'tocify',\n            tocClass = '.' + tocClassName,\n            tocFocusClassName = 'tocify-focus',\n            tocHoverClassName = 'tocify-hover',\n            hideTocClassName = 'tocify-hide',\n            hideTocClass = '.' + hideTocClassName,\n            headerClassName = 'tocify-header',\n            headerClass = '.' + headerClassName,\n            subheaderClassName = 'tocify-subheader',\n            subheaderClass = '.' + subheaderClassName,\n            itemClassName = 'tocify-item',\n            itemClass = '.' + itemClassName,\n            extendPageClassName = 'tocify-extend-page',\n            extendPageClass = '.' + extendPageClassName\n\n        // Calling the jQueryUI Widget Factory Method\n        $.widget('toc.tocify', {\n            //Plugin version\n            version: '1.9.0',\n\n            // These options will be used as defaults\n            options: {\n                // **context**: Accepts String: Any jQuery selector\n                // The container element that holds all of the elements used to generate the table of contents\n                context: 'body',\n\n                // **ignoreSelector**: Accepts String: Any jQuery selector\n                // A selector to any element that would be matched by selectors that you wish to be ignored\n                ignoreSelector: null,\n\n                // **selectors**: Accepts an Array of Strings: Any jQuery selectors\n                // The element's used to generate the table of contents.  The order is very important since it will determine the table of content's nesting structure\n                selectors: 'h1, h2, h3',\n\n                // **showAndHide**: Accepts a boolean: true or false\n                // Used to determine if elements should be shown and hidden\n                showAndHide: true,\n\n                // **showEffect**: Accepts String: \"none\", \"fadeIn\", \"show\", or \"slideDown\"\n                // Used to display any of the table of contents nested items\n                showEffect: 'slideDown',\n\n                // **showEffectSpeed**: Accepts Number (milliseconds) or String: \"slow\", \"medium\", or \"fast\"\n                // The time duration of the show animation\n                showEffectSpeed: 'medium',\n\n                // **hideEffect**: Accepts String: \"none\", \"fadeOut\", \"hide\", or \"slideUp\"\n                // Used to hide any of the table of contents nested items\n                hideEffect: 'slideUp',\n\n                // **hideEffectSpeed**: Accepts Number (milliseconds) or String: \"slow\", \"medium\", or \"fast\"\n                // The time duration of the hide animation\n                hideEffectSpeed: 'medium',\n\n                // **smoothScroll**: Accepts a boolean: true or false\n                // Determines if a jQuery animation should be used to scroll to specific table of contents items on the page\n                smoothScroll: true,\n\n                // **smoothScrollSpeed**: Accepts Number (milliseconds) or String: \"slow\", \"medium\", or \"fast\"\n                // The time duration of the smoothScroll animation\n                smoothScrollSpeed: 'medium',\n\n                // **scrollTo**: Accepts Number (pixels)\n                // The amount of space between the top of page and the selected table of contents item after the page has been scrolled\n                scrollTo: 0,\n\n                // **showAndHideOnScroll**: Accepts a boolean: true or false\n                // Determines if table of contents nested items should be shown and hidden while scrolling\n                showAndHideOnScroll: true,\n\n                // **highlightOnScroll**: Accepts a boolean: true or false\n                // Determines if table of contents nested items should be highlighted (set to a different color) while scrolling\n                highlightOnScroll: true,\n\n                // **highlightOffset**: Accepts a number\n                // The offset distance in pixels to trigger the next active table of contents item\n                highlightOffset: 40,\n\n                // **theme**: Accepts a string: \"bootstrap\", \"jqueryui\", or \"none\"\n                // Determines if Twitter Bootstrap, jQueryUI, or Tocify classes should be added to the table of contents\n                theme: 'bootstrap',\n\n                // **extendPage**: Accepts a boolean: true or false\n                // If a user scrolls to the bottom of the page and the page is not tall enough to scroll to the last table of contents item, then the page height is increased\n                extendPage: true,\n\n                // **extendPageOffset**: Accepts a number: pixels\n                // How close to the bottom of the page a user must scroll before the page is extended\n                extendPageOffset: 100,\n\n                // **history**: Accepts a boolean: true or false\n                // Adds a hash to the page url to maintain history\n                history: true,\n\n                // **scrollHistory**: Accepts a boolean: true or false\n                // Adds a hash to the page url, to maintain history, when scrolling to a TOC item\n                scrollHistory: false,\n\n                // **hashGenerator**: How the hash value (the anchor segment of the URL, following the\n                // # character) will be generated.\n                //\n                // \"compact\" (default) - #CompressesEverythingTogether\n                // \"pretty\" - #looks-like-a-nice-url-and-is-easily-readable\n                // function(text, element){} - Your own hash generation function that accepts the text as an\n                // argument, and returns the hash value.\n                hashGenerator: 'compact',\n\n                // **highlightDefault**: Accepts a boolean: true or false\n                // Set's the first TOC item as active if no other TOC item is active.\n                highlightDefault: true\n            },\n\n            // _Create\n            // -------\n            //      Constructs the plugin.  Only called once.\n            _create: function() {\n                var self = this\n\n                self.extendPageScroll = true\n\n                // Internal array that keeps track of all TOC items (Helps to recognize if there are duplicate TOC item strings)\n                self.items = []\n\n                // Generates the HTML for the dynamic table of contents\n                self._generateToc()\n\n                // Adds CSS classes to the newly generated table of contents HTML\n                self._addCSSClasses()\n\n                self.webkit = (function() {\n                    for (var prop in window) {\n                        if (prop) {\n                            if (prop.toLowerCase().indexOf('webkit') !== -1) {\n                                return true\n                            }\n                        }\n                    }\n\n                    return false\n                })()\n\n                // Adds jQuery event handlers to the newly generated table of contents\n                self._setEventHandlers()\n\n                // Binding to the Window load event to make sure the correct scrollTop is calculated\n                $(window).on('load', function() {\n                    // Sets the active TOC item\n                    self._setActiveElement(true)\n\n                    // Once all animations on the page are complete, this callback function will be called\n                    $('html, body')\n                        .promise()\n                        .done(function() {\n                            setTimeout(function() {\n                                self.extendPageScroll = false\n                            }, 0)\n                        })\n                })\n            },\n\n            // _generateToc\n            // ------------\n            //      Generates the HTML for the dynamic table of contents\n            _generateToc: function() {\n                // _Local variables_\n\n                // Stores the plugin context in the self variable\n                var self = this,\n                    // All of the HTML tags found within the context provided (i.e. body) that match the top level jQuery selector above\n                    firstElem,\n                    // Instantiated variable that will store the top level newly created unordered list DOM element\n                    ul,\n                    ignoreSelector = self.options.ignoreSelector\n\n                // If the selectors option has a comma within the string\n                if (this.options.selectors.indexOf(',') !== -1) {\n                    // Grabs the first selector from the string\n                    firstElem = $(this.options.context).find(\n                        this.options.selectors\n                            .replace(/ /g, '')\n                            .substr(0, this.options.selectors.indexOf(','))\n                    )\n                }\n\n                // If the selectors option does not have a comman within the string\n                else {\n                    // Grabs the first selector from the string and makes sure there are no spaces\n                    firstElem = $(this.options.context).find(\n                        this.options.selectors.replace(/ /g, '')\n                    )\n                }\n\n                if (!firstElem.length) {\n                    self.element.addClass(hideTocClassName)\n\n                    return\n                }\n\n                self.element.addClass(tocClassName)\n\n                // Loops through each top level selector\n                firstElem.each(function(index) {\n                    //If the element matches the ignoreSelector then we skip it\n                    if ($(this).is(ignoreSelector)) {\n                        return\n                    }\n\n                    // Creates an unordered list HTML element and adds a dynamic ID and standard class name\n                    ul = $('<ul/>', {\n                        id: headerClassName + index,\n                        class: headerClassName\n                    })\n                        // Appends a top level list item HTML element to the previously created HTML header\n                        .append(self._nestElements($(this), index))\n\n                    // Add the created unordered list element to the HTML element calling the plugin\n                    self.element.append(ul)\n\n                    // Finds all of the HTML tags between the header and subheader elements\n                    $(this)\n                        .nextUntil(this.nodeName.toLowerCase())\n                        .each(function() {\n                            // If there are no nested subheader elemements\n                            if (\n                                $(this).find(self.options.selectors).length ===\n                                0\n                            ) {\n                                // Loops through all of the subheader elements\n                                $(this)\n                                    .filter(self.options.selectors)\n                                    .each(function() {\n                                        //If the element matches the ignoreSelector then we skip it\n                                        if ($(this).is(ignoreSelector)) {\n                                            return\n                                        }\n\n                                        self._appendSubheaders.call(\n                                            this,\n                                            self,\n                                            ul\n                                        )\n                                    })\n                            }\n\n                            // If there are nested subheader elements\n                            else {\n                                // Loops through all of the subheader elements\n                                $(this)\n                                    .find(self.options.selectors)\n                                    .each(function() {\n                                        //If the element matches the ignoreSelector then we skip it\n                                        if ($(this).is(ignoreSelector)) {\n                                            return\n                                        }\n\n                                        self._appendSubheaders.call(\n                                            this,\n                                            self,\n                                            ul\n                                        )\n                                    })\n                            }\n                        })\n                })\n            },\n\n            _setActiveElement: function(pageload) {\n                var self = this,\n                    hash = window.location.hash.substring(1),\n                    elem = self.element.find('li[data-unique=\"' + hash + '\"]')\n\n                if (hash.length) {\n                    // Removes highlighting from all of the list item's\n                    self.element\n                        .find('.' + self.focusClass)\n                        .removeClass(self.focusClass)\n\n                    // Highlights the current list item that was clicked\n                    elem.addClass(self.focusClass)\n\n                    // If the showAndHide option is true\n                    if (self.options.showAndHide) {\n                        // Triggers the click event on the currently focused TOC item\n                        elem.click()\n                    }\n                } else {\n                    // Removes highlighting from all of the list item's\n                    self.element\n                        .find('.' + self.focusClass)\n                        .removeClass(self.focusClass)\n\n                    if (\n                        !hash.length &&\n                        pageload &&\n                        self.options.highlightDefault\n                    ) {\n                        // Highlights the first TOC item if no other items are highlighted\n                        self.element\n                            .find(itemClass)\n                            .first()\n                            .addClass(self.focusClass)\n                    }\n                }\n\n                return self\n            },\n\n            // _nestElements\n            // -------------\n            //      Helps create the table of contents list by appending nested list items\n            _nestElements: function(self, index) {\n                var arr, item, hashValue\n\n                arr = $.grep(this.items, function(item) {\n                    return item === self.text()\n                })\n\n                // If there is already a duplicate TOC item\n                if (arr.length) {\n                    // Adds the current TOC item text and index (for slight randomization) to the internal array\n                    this.items.push(self.text() + index)\n                }\n\n                // If there not a duplicate TOC item\n                else {\n                    // Adds the current TOC item text to the internal array\n                    this.items.push(self.text())\n                }\n\n                hashValue = this._generateHashValue(arr, self, index)\n\n                // Appends a list item HTML element to the last unordered list HTML element found within the HTML element calling the plugin\n                item = $('<li/>', {\n                    // Sets a common class name to the list item\n                    class: itemClassName,\n\n                    'data-unique': hashValue\n                }).append(\n                    $('<a/>', {\n                        text: self.text()\n                    })\n                )\n\n                // Adds an HTML anchor tag before the currently traversed HTML element\n                self.before(\n                    $('<div/>', {\n                        // Sets a name attribute on the anchor tag to the text of the currently traversed HTML element (also making sure that all whitespace is replaced with an underscore)\n                        name: hashValue,\n\n                        'data-unique': hashValue\n                    })\n                )\n\n                return item\n            },\n\n            // _generateHashValue\n            // ------------------\n            //      Generates the hash value that will be used to refer to each item.\n            _generateHashValue: function(arr, self, index) {\n                var hashValue = '',\n                    hashGeneratorOption = this.options.hashGenerator\n\n                if (hashGeneratorOption === 'pretty') {\n                    // prettify the text\n                    hashValue = self\n                        .text()\n                        .toLowerCase()\n                        .replace(/\\s/g, '-')\n\n                    // fix double hyphens\n                    while (hashValue.indexOf('--') > -1) {\n                        hashValue = hashValue.replace(/--/g, '-')\n                    }\n\n                    // fix colon-space instances\n                    while (hashValue.indexOf(':-') > -1) {\n                        hashValue = hashValue.replace(/:-/g, '-')\n                    }\n                } else if (typeof hashGeneratorOption === 'function') {\n                    // call the function\n                    hashValue = hashGeneratorOption(self.text(), self)\n                } else {\n                    // compact - the default\n                    hashValue = self.text().replace(/\\s/g, '')\n                }\n\n                // add the index if we need to\n                if (arr.length) {\n                    hashValue += '' + index\n                }\n\n                // return the value\n                return hashValue\n            },\n\n            // _appendElements\n            // ---------------\n            //      Helps create the table of contents list by appending subheader elements\n\n            _appendSubheaders: function(self, ul) {\n                // The current element index\n                var index = $(this).index(self.options.selectors),\n                    // Finds the previous header DOM element\n                    previousHeader = $(self.options.selectors).eq(index - 1),\n                    currentTagName = +$(this)\n                        .prop('tagName')\n                        .charAt(1),\n                    previousTagName = +previousHeader.prop('tagName').charAt(1),\n                    lastSubheader\n\n                // If the current header DOM element is smaller than the previous header DOM element or the first subheader\n                if (currentTagName < previousTagName) {\n                    // Selects the last unordered list HTML found within the HTML element calling the plugin\n                    self.element\n                        .find(\n                            subheaderClass + '[data-tag=' + currentTagName + ']'\n                        )\n                        .last()\n                        .append(self._nestElements($(this), index))\n                }\n\n                // If the current header DOM element is the same type of header(eg. h4) as the previous header DOM element\n                else if (currentTagName === previousTagName) {\n                    ul.find(itemClass)\n                        .last()\n                        .after(self._nestElements($(this), index))\n                } else {\n                    // Selects the last unordered list HTML found within the HTML element calling the plugin\n                    ul.find(itemClass)\n                        .last()\n                        // Appends an unorderedList HTML element to the dynamic `unorderedList` variable and sets a common class name\n                        .after(\n                            $('<ul/>', {\n                                class: subheaderClassName,\n\n                                'data-tag': currentTagName\n                            })\n                        )\n                        .next(subheaderClass)\n                        // Appends a list item HTML element to the last unordered list HTML element found within the HTML element calling the plugin\n                        .append(self._nestElements($(this), index))\n                }\n            },\n\n            // _setEventHandlers\n            // ----------------\n            //      Adds jQuery event handlers to the newly generated table of contents\n            _setEventHandlers: function() {\n                // _Local variables_\n\n                // Stores the plugin context in the self variable\n                var self = this,\n                    // Instantiates a new variable that will be used to hold a specific element's context\n                    $self,\n                    // Instantiates a new variable that will be used to determine the smoothScroll animation time duration\n                    duration\n\n                // Event delegation that looks for any clicks on list item elements inside of the HTML element calling the plugin\n                this.element.on('click.tocify', 'li', function(event) {\n                    if (self.options.history) {\n                        window.location.hash = $(this).attr('data-unique')\n                    }\n\n                    // Removes highlighting from all of the list item's\n                    self.element\n                        .find('.' + self.focusClass)\n                        .removeClass(self.focusClass)\n\n                    // Highlights the current list item that was clicked\n                    $(this).addClass(self.focusClass)\n\n                    // If the showAndHide option is true\n                    //   if (self.options.showAndHide) {\n                    var elem = $(\n                        'li[data-unique=\"' + $(this).attr('data-unique') + '\"]'\n                    )\n\n                    self._triggerShow(elem)\n                    //   }\n\n                    self._scrollTo($(this))\n                })\n\n                // Mouseenter and Mouseleave event handlers for the list item's within the HTML element calling the plugin\n                this.element.find('li').on({\n                    // Mouseenter event handler\n                    'mouseenter.tocify': function() {\n                        // Adds a hover CSS class to the current list item\n                        $(this).addClass(self.hoverClass)\n\n                        // Makes sure the cursor is set to the pointer icon\n                        $(this).css('cursor', 'pointer')\n                    },\n\n                    // Mouseleave event handler\n                    'mouseleave.tocify': function() {\n                        if (self.options.theme !== 'bootstrap') {\n                            // Removes the hover CSS class from the current list item\n                            $(this).removeClass(self.hoverClass)\n                        }\n                    }\n                })\n\n                // only attach handler if needed (expensive in IE)\n                if (\n                    self.options.extendPage ||\n                    self.options.highlightOnScroll ||\n                    self.options.scrollHistory ||\n                    self.options.showAndHideOnScroll\n                ) {\n                    // Window scroll event handler\n                    $(window).on('scroll.tocify', function() {\n                        // Once all animations on the page are complete, this callback function will be called\n                        $('html, body')\n                            .promise()\n                            .done(function() {\n                                // Local variables\n\n                                // Stores how far the user has scrolled\n                                var winScrollTop = $(window).scrollTop(),\n                                    // Stores the height of the window\n                                    winHeight = $(window).height(),\n                                    // Stores the height of the document\n                                    docHeight = $(document).height(),\n                                    scrollHeight = $('body')[0].scrollHeight,\n                                    // Instantiates a variable that will be used to hold a selected HTML element\n                                    elem,\n                                    lastElem,\n                                    lastElemOffset,\n                                    currentElem\n\n                                if (self.options.extendPage) {\n                                    // If the user has scrolled to the bottom of the page and the last toc item is not focused\n                                    if (\n                                        (self.webkit &&\n                                            winScrollTop >=\n                                                scrollHeight -\n                                                    winHeight -\n                                                    self.options\n                                                        .extendPageOffset) ||\n                                        (!self.webkit &&\n                                            winHeight + winScrollTop >\n                                                docHeight -\n                                                    self.options\n                                                        .extendPageOffset)\n                                    ) {\n                                        if (!$(extendPageClass).length) {\n                                            lastElem = $(\n                                                'div[data-unique=\"' +\n                                                    $(itemClass)\n                                                        .last()\n                                                        .attr('data-unique') +\n                                                    '\"]'\n                                            )\n\n                                            if (!lastElem.length) return\n\n                                            // Gets the top offset of the page header that is linked to the last toc item\n                                            lastElemOffset = lastElem.offset()\n                                                .top\n\n                                            // Appends a div to the bottom of the page and sets the height to the difference of the window scrollTop and the last element's position top offset\n                                            $(self.options.context).append(\n                                                $('<div />', {\n                                                    class: extendPageClassName,\n\n                                                    height:\n                                                        Math.abs(\n                                                            lastElemOffset -\n                                                                winScrollTop\n                                                        ) + 'px',\n\n                                                    'data-unique': extendPageClassName\n                                                })\n                                            )\n\n                                            if (self.extendPageScroll) {\n                                                currentElem = self.element.find(\n                                                    'li.active'\n                                                )\n\n                                                self._scrollTo(\n                                                    $(\n                                                        'div[data-unique=\"' +\n                                                            currentElem.attr(\n                                                                'data-unique'\n                                                            ) +\n                                                            '\"]'\n                                                    )\n                                                )\n                                            }\n                                        }\n                                    }\n                                }\n\n                                // The zero timeout ensures the following code is run after the scroll events\n                                setTimeout(function() {\n                                    // _Local variables_\n\n                                    // Stores the distance to the closest anchor\n                                    var closestAnchorDistance = null,\n                                        // Stores the index of the closest anchor\n                                        closestAnchorIdx = null,\n                                        // Keeps a reference to all anchors\n                                        anchors = $(self.options.context).find(\n                                            'div[data-unique]'\n                                        ),\n                                        anchorText\n\n                                    // Determines the index of the closest anchor\n                                    anchors.each(function(idx) {\n                                        var distance = Math.abs(\n                                            ($(this).next().length\n                                                ? $(this).next()\n                                                : $(this)\n                                            ).offset().top -\n                                                winScrollTop -\n                                                self.options.highlightOffset\n                                        )\n                                        if (\n                                            closestAnchorDistance == null ||\n                                            distance < closestAnchorDistance\n                                        ) {\n                                            closestAnchorDistance = distance\n                                            closestAnchorIdx = idx\n                                        } else {\n                                            return false\n                                        }\n                                    })\n\n                                    anchorText = $(\n                                        anchors[closestAnchorIdx]\n                                    ).attr('data-unique')\n\n                                    // Stores the list item HTML element that corresponds to the currently traversed anchor tag\n                                    elem = $(\n                                        'li[data-unique=\"' + anchorText + '\"]'\n                                    )\n\n                                    // If the `highlightOnScroll` option is true and a next element is found\n                                    if (\n                                        self.options.highlightOnScroll &&\n                                        elem.length\n                                    ) {\n                                        // Removes highlighting from all of the list item's\n                                        self.element\n                                            .find('.' + self.focusClass)\n                                            .removeClass(self.focusClass)\n\n                                        // Highlights the corresponding list item\n                                        elem.addClass(self.focusClass)\n                                    }\n\n                                    if (self.options.scrollHistory) {\n                                        if (\n                                            window.location.hash !==\n                                            '#' + anchorText\n                                        ) {\n                                            window.location.replace(\n                                                '#' + anchorText\n                                            )\n                                        }\n                                    }\n\n                                    // If the `showAndHideOnScroll` option is true\n                                    if (\n                                        self.options.showAndHideOnScroll &&\n                                        self.options.showAndHide\n                                    ) {\n                                        self._triggerShow(elem, true)\n                                    }\n                                }, 0)\n                            })\n                    })\n                }\n            },\n\n            // Show\n            // ----\n            //      Opens the current sub-header\n            show: function(elem, scroll) {\n                // Stores the plugin context in the `self` variable\n                var self = this,\n                    element = elem\n\n                // If the sub-header is not already visible\n                if (!elem.is(':visible')) {\n                    // If the current element does not have any nested subheaders, is not a header, and its parent is not visible\n                    if (\n                        !elem.find(subheaderClass).length &&\n                        !elem.parent().is(headerClass) &&\n                        !elem.parent().is(':visible')\n                    ) {\n                        // Sets the current element to all of the subheaders within the current header\n                        elem = elem.parents(subheaderClass).add(elem)\n                    }\n\n                    // If the current element does not have any nested subheaders and is not a header\n                    else if (\n                        !elem.children(subheaderClass).length &&\n                        !elem.parent().is(headerClass)\n                    ) {\n                        // Sets the current element to the closest subheader\n                        elem = elem.closest(subheaderClass)\n                    }\n\n                    //Determines what jQuery effect to use\n                    switch (self.options.showEffect) {\n                        //Uses `no effect`\n                        case 'none':\n                            elem.show()\n\n                            break\n\n                        //Uses the jQuery `show` special effect\n                        case 'show':\n                            elem.show(self.options.showEffectSpeed)\n\n                            break\n\n                        //Uses the jQuery `slideDown` special effect\n                        case 'slideDown':\n                            elem.slideDown(self.options.showEffectSpeed)\n\n                            break\n\n                        //Uses the jQuery `fadeIn` special effect\n                        case 'fadeIn':\n                            elem.fadeIn(self.options.showEffectSpeed)\n\n                            break\n\n                        //If none of the above options were passed, then a `jQueryUI show effect` is expected\n                        default:\n                            elem.show()\n\n                            break\n                    }\n                }\n\n                // If the current subheader parent element is a header\n                if (elem.parent().is(headerClass)) {\n                    // Hides all non-active sub-headers\n                    self.hide($(subheaderClass).not(elem))\n                }\n\n                // If the current subheader parent element is not a header\n                else {\n                    // Hides all non-active sub-headers\n                    self.hide(\n                        $(subheaderClass).not(\n                            elem\n                                .closest(headerClass)\n                                .find(subheaderClass)\n                                .not(elem.siblings())\n                        )\n                    )\n                }\n\n                // Maintains chainablity\n                return self\n            },\n\n            // Hide\n            // ----\n            //      Closes the current sub-header\n            hide: function(elem) {\n                // Stores the plugin context in the `self` variable\n                var self = this\n\n                //Determines what jQuery effect to use\n                switch (self.options.hideEffect) {\n                    // Uses `no effect`\n                    case 'none':\n                        elem.hide()\n\n                        break\n\n                    // Uses the jQuery `hide` special effect\n                    case 'hide':\n                        elem.hide(self.options.hideEffectSpeed)\n\n                        break\n\n                    // Uses the jQuery `slideUp` special effect\n                    case 'slideUp':\n                        elem.slideUp(self.options.hideEffectSpeed)\n\n                        break\n\n                    // Uses the jQuery `fadeOut` special effect\n                    case 'fadeOut':\n                        elem.fadeOut(self.options.hideEffectSpeed)\n\n                        break\n\n                    // If none of the above options were passed, then a `jqueryUI hide effect` is expected\n                    default:\n                        elem.hide()\n\n                        break\n                }\n\n                // Maintains chainablity\n                return self\n            },\n\n            // _triggerShow\n            // ------------\n            //      Determines what elements get shown on scroll and click\n            _triggerShow: function(elem, scroll) {\n                var self = this\n\n                // If the current element's parent is a header element or the next element is a nested subheader element\n                if (\n                    elem.parent().is(headerClass) ||\n                    elem.next().is(subheaderClass)\n                ) {\n                    // Shows the next sub-header element\n                    self.show(elem.next(subheaderClass), scroll)\n                }\n\n                // If the current element's parent is a subheader element\n                else if (elem.parent().is(subheaderClass)) {\n                    // Shows the parent sub-header element\n                    self.show(elem.parent(), scroll)\n                }\n\n                // Maintains chainability\n                return self\n            },\n\n            // _addCSSClasses\n            // --------------\n            //      Adds CSS classes to the newly generated table of contents HTML\n            _addCSSClasses: function() {\n                // If the user wants a jqueryUI theme\n                if (this.options.theme === 'jqueryui') {\n                    this.focusClass = 'ui-state-default'\n\n                    this.hoverClass = 'ui-state-hover'\n\n                    //Adds the default styling to the dropdown list\n                    this.element\n                        .addClass('ui-widget')\n                        .find('.toc-title')\n                        .addClass('ui-widget-header')\n                        .end()\n                        .find('li')\n                        .addClass('ui-widget-content')\n                }\n\n                // If the user wants a twitterBootstrap theme\n                else if (this.options.theme === 'bootstrap') {\n                    this.element\n                        .find(headerClass + ',' + subheaderClass)\n                        .addClass('nav nav-list')\n\n                    this.focusClass = 'active'\n                }\n\n                // If a user does not want a prebuilt theme\n                else {\n                    // Adds more neutral classes (instead of jqueryui)\n\n                    this.focusClass = tocFocusClassName\n\n                    this.hoverClass = tocHoverClassName\n                }\n\n                //Maintains chainability\n                return this\n            },\n\n            // setOption\n            // ---------\n            //      Sets a single Tocify option after the plugin is invoked\n            setOption: function() {\n                // Calls the jQueryUI Widget Factory setOption method\n                $.Widget.prototype._setOption.apply(this, arguments)\n            },\n\n            // setOptions\n            // ----------\n            //      Sets a single or multiple Tocify options after the plugin is invoked\n            setOptions: function() {\n                // Calls the jQueryUI Widget Factory setOptions method\n                $.Widget.prototype._setOptions.apply(this, arguments)\n            },\n\n            // _scrollTo\n            // ---------\n            //      Scrolls to a specific element\n            _scrollTo: function(elem) {\n                var self = this,\n                    duration = self.options.smoothScroll || 0,\n                    scrollTo = self.options.scrollTo,\n                    currentDiv = $(\n                        'div[data-unique=\"' + elem.attr('data-unique') + '\"]'\n                    )\n\n                if (!currentDiv.length) {\n                    return self\n                }\n\n                // Once all animations on the page are complete, this callback function will be called\n                $('html, body')\n                    .promise()\n                    .done(function() {\n                        // Animates the html and body element scrolltops\n                        $('html, body').animate(\n                            {\n                                // Sets the jQuery `scrollTop` to the top offset of the HTML div tag that matches the current list item's `data-unique` tag\n                                scrollTop:\n                                    currentDiv.offset().top -\n                                    ($.isFunction(scrollTo)\n                                        ? scrollTo.call()\n                                        : scrollTo) +\n                                    'px'\n                            },\n                            {\n                                // Sets the smoothScroll animation time duration to the smoothScrollSpeed option\n                                duration: duration\n                            }\n                        )\n                    })\n\n                // Maintains chainability\n                return self\n            }\n        })\n    }\n) //end of plugin\n"]}